/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package de.reebow.loga;

import static org.junit.jupiter.api.Assertions.assertEquals;

import java.util.List;

import de.reebow.loga.annotations.LogInput;
import de.reebow.loga.appenders.TestAppender;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.core.LogEvent;
import org.apache.logging.log4j.core.LoggerContext;
import org.apache.logging.log4j.core.config.Configuration;
import org.apache.logging.log4j.core.impl.MutableLogEvent;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

class LogInputAspectIntegrationTest {

  public static final String EXPECTED_LOG_MESSAGE = "Input arguments for method \"methodUnderTest\": Parameter type: "
    + "class java.lang.StringParameter name: name value: Daria. Parameter type: " + "intParameter name: age value: 1. ";

  private TestAppender appender;

  @LogInput
  @SuppressWarnings("unused")
  public void methodUnderTest(String name, int age) {

  }

  @BeforeEach
  void setUp() {
    LoggerContext ctx = (LoggerContext) LogManager.getContext(false);
    Configuration config = ctx.getConfiguration();
    appender = (TestAppender) config.getAppenders().get("TestAppender");
  }

  @Test
  @DisplayName("Method with Annotation @LogInput - invoke method - log method name, parameter types, name and value")
  void logInput() {
    methodUnderTest("Daria", 1);

    List<LogEvent> logEvents = appender.getLogEvents();

    assertEquals(1, logEvents.size());
    LogEvent logEvent = logEvents.get(0);
    assertEquals(EXPECTED_LOG_MESSAGE, ((MutableLogEvent) logEvent).getFormattedMessage());
  }

}
